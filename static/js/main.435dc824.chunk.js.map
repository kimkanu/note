{"version":3,"sources":["App.tsx","serviceWorker.ts","index.tsx","utils/markdown-it-katex.js"],"names":["ace","config","setModuleUrl","require","md","MarkdownIt","use","MarkdownItIncrementalDOM","IncrementalDOM","MarkdownItKaTeX","App","useState","content","setContent","widthFactor","setWidthFactor","isDragging","setDragging","useEffect","document","getElementById","renderToIncrementalDOM","style","width","height","onMouseMove","e","Math","min","max","pageX","window","innerWidth","onMouseUp","onMouseLeave","display","mode","theme","onChange","value","editorProps","$blockScrolling","boxSizing","paddingRight","id","paddingLeft","marginLeft","onMouseDownCapture","Boolean","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message","katex","isValidDelim","state","pos","prevChar","nextChar","posMax","can_open","can_close","src","charCodeAt","math_inline","silent","start","token","pending","indexOf","push","markup","slice","math_block","end","firstLine","lastLine","next","lastPos","found","bMarks","tShift","eMarks","trim","blkIndent","lastIndexOf","line","block","getLines","map","module","exports","options","inline","ruler","after","alt","renderer","rules","tokens","idx","latex","displayMode","renderToString","throwOnError","log","katexInline","katexBlock"],"mappings":"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","file":"static/js/main.435dc824.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport \"./App.css\";\n\nimport * as IncrementalDOM from \"incremental-dom\";\nimport MarkdownIt from \"markdown-it\";\nimport MarkdownItKaTeX from \"./utils/markdown-it-katex\";\nimport MarkdownItIncrementalDOM from \"markdown-it-incremental-dom\";\n\nimport ace from \"ace-builds\";\nimport AceEditor from \"react-ace-builds\";\nimport \"ace-builds/src-noconflict/mode-latex\";\nimport \"ace-builds/src-noconflict/theme-github\";\n\nimport \"katex/dist/katex.min.js\";\nimport \"katex/dist/katex.min.css\";\n\n/* eslint import/no-webpack-loader-syntax: off */\nace.config.setModuleUrl(\n  \"ace/mode/latex\",\n  require(\"file-loader?esModule=false!ace-builds/src-min-noconflict/mode-latex.js\"),\n);\nace.config.setModuleUrl(\n  \"ace/theme/github\",\n  require(\"file-loader?esModule=false!ace-builds/src-min-noconflict/theme-github.js\"),\n);\n\nconst md = new MarkdownIt()\n  .use(MarkdownItIncrementalDOM, IncrementalDOM)\n  .use(MarkdownItKaTeX);\n\nconst MIN_WIDTH_FACTOR = 0.15;\nconst MAX_WIDTH_FACTOR = 1 - MIN_WIDTH_FACTOR;\n\nfunction App() {\n  const [content, setContent] = useState<string>(\"\");\n  const [widthFactor, setWidthFactor] = useState<number>(0.5);\n  const [isDragging, setDragging] = useState<boolean>(false);\n\n  useEffect(() => {\n    IncrementalDOM.patch(\n      document.getElementById(\"renderer\")!,\n      (md as any).renderToIncrementalDOM(content),\n    );\n  }, [content]);\n\n  return (\n    <div\n      style={{\n        width: \"100%\",\n        height: \"100%\",\n      }}\n      onMouseMove={(e) => {\n        if (isDragging) {\n          setWidthFactor(\n            Math.min(\n              Math.max(e.pageX / window.innerWidth, MIN_WIDTH_FACTOR),\n              MAX_WIDTH_FACTOR,\n            ),\n          );\n        }\n      }}\n      onMouseUp={() => setDragging(false)}\n      onMouseLeave={() => setDragging(false)}\n    >\n      <div\n        style={{\n          display: \"flex\",\n          width: \"100%\",\n          height: \"100%\",\n        }}\n      >\n        <AceEditor\n          mode=\"latex\"\n          theme=\"github\"\n          onChange={setContent}\n          value={content}\n          width={`${widthFactor * 100}%`}\n          height=\"100%\"\n          editorProps={{ $blockScrolling: true }}\n          style={{\n            boxSizing: \"border-box\",\n            paddingRight: 3,\n          }}\n        />\n        <div\n          id=\"renderer\"\n          style={{\n            width: `${(1 - widthFactor) * 100}%`,\n            height: \"100%\",\n            boxSizing: \"border-box\",\n            paddingLeft: 3,\n          }}\n        ></div>\n      </div>\n      <div\n        id=\"separator\"\n        style={{\n          boxSizing: \"border-box\",\n          marginLeft: `${widthFactor * 100}vw`,\n        }}\n        onMouseDownCapture={() => setDragging(true)}\n      ></div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\"),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","/* Process inline math */\n/*\nLike markdown-it-simplemath, this is a stripped down, simplified version of:\nhttps://github.com/runarberg/markdown-it-math\n\nIt differs in that it takes (a subset of) LaTeX as input and relies on KaTeX\nfor rendering output.\n*/\n\n/*jslint node: true */\n\"use strict\";\n\nvar katex = require(\"katex\");\n\n// Test if potential opening or closing delimieter\n// Assumes that there is a \"$\" at state.src[pos]\nfunction isValidDelim(state, pos) {\n  var prevChar,\n    nextChar,\n    max = state.posMax,\n    can_open = true,\n    can_close = true;\n\n  prevChar = pos > 0 ? state.src.charCodeAt(pos - 1) : -1;\n  nextChar = pos + 1 <= max ? state.src.charCodeAt(pos + 1) : -1;\n\n  // Check non-whitespace conditions for opening and closing, and\n  // check that closing delimeter isn't followed by a number\n  if (\n    prevChar === 0x20 /* \" \" */ ||\n    prevChar === 0x09 /* \\t */ ||\n    (nextChar >= 0x30 /* \"0\" */ && nextChar <= 0x39) /* \"9\" */\n  ) {\n    can_close = false;\n  }\n  if (nextChar === 0x20 /* \" \" */ || nextChar === 0x09 /* \\t */) {\n    can_open = false;\n  }\n\n  return {\n    can_open: can_open,\n    can_close: can_close,\n  };\n}\n\nfunction math_inline(state, silent) {\n  var start, match, token, res, pos, esc_count;\n\n  if (state.src[state.pos] !== \"$\") {\n    return false;\n  }\n\n  res = isValidDelim(state, state.pos);\n  if (!res.can_open) {\n    if (!silent) {\n      state.pending += \"$\";\n    }\n    state.pos += 1;\n    return true;\n  }\n\n  // First check for and bypass all properly escaped delimieters\n  // This loop will assume that the first leading backtick can not\n  // be the first character in state.src, which is known since\n  // we have found an opening delimieter already.\n  start = state.pos + 1;\n  match = start;\n  while ((match = state.src.indexOf(\"$\", match)) !== -1) {\n    // Found potential $, look for escapes, pos will point to\n    // first non escape when complete\n    pos = match - 1;\n    while (state.src[pos] === \"\\\\\") {\n      pos -= 1;\n    }\n\n    // Even number of escapes, potential closing delimiter found\n    if ((match - pos) % 2 == 1) {\n      break;\n    }\n    match += 1;\n  }\n\n  // No closing delimter found.  Consume $ and continue.\n  if (match === -1) {\n    if (!silent) {\n      state.pending += \"$\";\n    }\n    state.pos = start;\n    return true;\n  }\n\n  // Check if we have empty content, ie: $$.  Do not parse.\n  if (match - start === 0) {\n    if (!silent) {\n      state.pending += \"$$\";\n    }\n    state.pos = start + 1;\n    return true;\n  }\n\n  // Check for valid closing delimiter\n  res = isValidDelim(state, match);\n  if (!res.can_close) {\n    if (!silent) {\n      state.pending += \"$\";\n    }\n    state.pos = start;\n    return true;\n  }\n\n  if (!silent) {\n    token = state.push(\"math_inline\", \"math\", 0);\n    token.markup = \"$\";\n    token.content = state.src.slice(start, match);\n  }\n\n  state.pos = match + 1;\n  return true;\n}\n\nfunction math_block(state, start, end, silent) {\n  var firstLine,\n    lastLine,\n    next,\n    lastPos,\n    found = false,\n    token,\n    pos = state.bMarks[start] + state.tShift[start],\n    max = state.eMarks[start];\n\n  if (pos + 2 > max) {\n    return false;\n  }\n  if (state.src.slice(pos, pos + 2) !== \"$$\") {\n    return false;\n  }\n\n  pos += 2;\n  firstLine = state.src.slice(pos, max);\n\n  if (silent) {\n    return true;\n  }\n  if (firstLine.trim().slice(-2) === \"$$\") {\n    // Single line expression\n    firstLine = firstLine.trim().slice(0, -2);\n    found = true;\n  }\n\n  for (next = start; !found; ) {\n    next++;\n\n    if (next >= end) {\n      break;\n    }\n\n    pos = state.bMarks[next] + state.tShift[next];\n    max = state.eMarks[next];\n\n    if (pos < max && state.tShift[next] < state.blkIndent) {\n      // non-empty line with negative indent should stop the list:\n      break;\n    }\n\n    if (state.src.slice(pos, max).trim().slice(-2) === \"$$\") {\n      lastPos = state.src.slice(0, max).lastIndexOf(\"$$\");\n      lastLine = state.src.slice(pos, lastPos);\n      found = true;\n    }\n  }\n\n  state.line = next + 1;\n\n  token = state.push(\"math_block\", \"math\", 0);\n  token.block = true;\n  token.content =\n    (firstLine && firstLine.trim() ? firstLine + \"\\n\" : \"\") +\n    state.getLines(start + 1, next, state.tShift[start], true) +\n    (lastLine && lastLine.trim() ? lastLine : \"\");\n  token.map = [start, state.line];\n  token.markup = \"$$\";\n  return true;\n}\n\nmodule.exports = function math_plugin(md, options) {\n  // Default options\n\n  options = options || {};\n\n  // set KaTeX as the renderer for markdown-it-simplemath\n  var katexInline = function (latex) {\n    options.displayMode = false;\n    try {\n      return katex.renderToString(latex, options);\n    } catch (error) {\n      if (options.throwOnError) {\n        console.log(error);\n      }\n      return latex;\n    }\n  };\n\n  var inlineRenderer = function (tokens, idx) {\n    return katexInline(tokens[idx].content);\n  };\n\n  var katexBlock = function (latex) {\n    options.displayMode = true;\n    try {\n      return \"<p>\" + katex.renderToString(latex, options) + \"</p>\";\n    } catch (error) {\n      if (options.throwOnError) {\n        console.log(error);\n      }\n      return latex;\n    }\n  };\n\n  var blockRenderer = function (tokens, idx) {\n    return katexBlock(tokens[idx].content) + \"\\n\";\n  };\n\n  md.inline.ruler.after(\"escape\", \"math_inline\", math_inline);\n  md.block.ruler.after(\"blockquote\", \"math_block\", math_block, {\n    alt: [\"paragraph\", \"reference\", \"blockquote\", \"list\"],\n  });\n  md.renderer.rules.math_inline = inlineRenderer;\n  md.renderer.rules.math_block = blockRenderer;\n};\n"],"sourceRoot":""}