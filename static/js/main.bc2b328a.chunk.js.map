{"version":3,"sources":["models/FileSystem.ts","App.tsx","serviceWorker.ts","index.tsx","utils/markdown-it-katex.js"],"names":["FILENAME_PREFIX","FileSystem","index","cache","this","getIndex","INDEX_PATH","indexString","localStorage","getItem","setItem","Set","indexArray","JSON","parse","Array","isArray","filter","s","startsWith","map","slice","length","filename","has","console","log","add","stringify","from","content","createFile","hljs","require","latex","registerLanguage","ace","config","setModuleUrl","md","MarkdownIt","linkify","use","MarkdownItIncrementalDOM","IncrementalDOM","MarkdownItKaTeX","inline","fileSystem","blobToBase64","blob","a","reader","window","FileReader","readAsDataURL","Promise","resolve","onloadend","result","App","useState","widthFactor","setWidthFactor","isDragging","setDragging","current","currentFileName","setCurrentFileName","getFile","setContent","fileList","setFileList","importButtonText","setImportButtonText","exportButtonText","setExportButtonText","isClipboardSupported","setClipboardSupported","useEffect","document","getElementById","renderToIncrementalDOM","updateFile","navigator","permissions","query","name","then","state","clipboard","read","catch","info","style","width","height","onMouseMove","e","Math","min","max","pageX","innerWidth","onMouseUp","onMouseLeave","backgroundColor","display","alignItems","fontFamily","padding","zIndex","isClearable","placeholder","options","label","value","undefined","styles","menu","provided","onChange","action","setCurrent","className","onClick","keyOrUrl","prompt","key","includes","matches","match","url","fetch","text","toString","method","body","json","open","boxSizing","mode","theme","editorProps","$blockScrolling","borderRadius","boxShadow","readOnly","onLoad","editor","commands","addCommand","bindKey","win","mac","exec","getSelectedText","row","selection","getRange","end","session","insert","column","Infinity","replace","setOption","getOption","data","types","getType","clearSelection","moveCursorTo","formData","FormData","base64Image","append","headers","Authorization","response","link","moveCursorBy","id","fontSize","overflowY","justifyContent","fontStyle","marginLeft","onMouseDownCapture","Boolean","location","hostname","ReactDOM","render","StrictMode","serviceWorker","ready","registration","unregister","error","message","katex","isValidDelim","pos","prevChar","nextChar","posMax","can_open","can_close","src","charCodeAt","math_inline","silent","start","token","pending","indexOf","push","markup","math_block","firstLine","lastLine","next","lastPos","found","bMarks","tShift","eMarks","trim","blkIndent","lastIndexOf","line","block","getLines","module","exports","ruler","after","alt","renderer","rules","tokens","idx","displayMode","renderToString","throwOnError","katexInline","katexBlock"],"mappings":"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","file":"static/js/main.bc2b328a.chunk.js","sourcesContent":["const FILENAME_PREFIX = \"__NOTE_KANU_KIM_FILE_SYSTEM__\";\n\nexport class FileSystem {\n  index: Set<string>;\n  cache: { [name: string]: string };\n\n  constructor() {\n    this.index = this.getIndex();\n    this.cache = {};\n  }\n\n  getIndex(): Set<string> {\n    const INDEX_PATH = `${FILENAME_PREFIX}/index`;\n    const indexString = localStorage.getItem(INDEX_PATH);\n    if (indexString === null) {\n      localStorage.setItem(INDEX_PATH, \"[]\");\n      return new Set();\n    }\n    try {\n      const indexArray: string[] = JSON.parse(indexString);\n      if (Array.isArray(indexArray)) {\n        return new Set(\n          indexArray\n            .filter((s) => s.startsWith(FILENAME_PREFIX))\n            .map((s) => s.slice(FILENAME_PREFIX.length + 1, -4))\n        );\n      }\n      return new Set();\n    } catch {\n      localStorage.setItem(INDEX_PATH, \"[]\");\n      return new Set();\n    }\n  }\n\n  get current(): string | null {\n    const filename = localStorage.getItem(`${FILENAME_PREFIX}/current`);\n    return filename || null;\n  }\n\n  setCurrent(filename: string | null) {\n    localStorage.setItem(`${FILENAME_PREFIX}/current`, filename ?? \"\");\n  }\n\n  getFile(filename: string): string | null {\n    if (!this.index.has(filename)) {\n      return null;\n    }\n    if (this.cache[filename]) {\n      return this.cache[filename];\n    }\n    this.cache[filename] =\n      localStorage.getItem(`${FILENAME_PREFIX}/${filename}.mdx`) ?? \"\";\n    return this.cache[filename];\n  }\n\n  createFile(filename: string): boolean {\n    if (this.index.has(filename)) {\n      return false;\n    }\n    console.log(\"created\");\n    this.index.add(filename);\n    this.cache[filename] = \"\";\n    localStorage.setItem(`${FILENAME_PREFIX}/${filename}.mdx`, \"\");\n    localStorage.setItem(\n      `${FILENAME_PREFIX}/index`,\n      JSON.stringify(\n        Array.from(this.index).map(\n          (filename) => `${FILENAME_PREFIX}/${filename}.mdx`\n        )\n      )\n    );\n\n    return true;\n  }\n\n  updateFile(filename: string, content: string): boolean {\n    if (!this.index.has(filename)) {\n      const created = this.createFile(filename);\n      if (!created) {\n        return false;\n      }\n    }\n    this.cache[filename] = content;\n    localStorage.setItem(`${FILENAME_PREFIX}/${filename}.mdx`, content);\n    return true;\n  }\n}\n","import React, { useEffect, useState } from \"react\";\nimport \"./App.css\";\n\nimport * as IncrementalDOM from \"incremental-dom\";\nimport MarkdownIt from \"markdown-it\";\nimport MarkdownItKaTeX from \"./utils/markdown-it-katex\";\nimport MarkdownItIncrementalDOM from \"markdown-it-incremental-dom\";\n\nimport Creatable from \"react-select/creatable\";\nimport { FileSystem } from \"./models/FileSystem\";\n\nimport ace from \"ace-builds\";\nimport AceEditor from \"react-ace-builds\";\nimport \"ace-builds/src-noconflict/mode-latex\";\nimport \"ace-builds/src-noconflict/theme-github\";\n\nimport \"katex/dist/katex.min.js\";\nimport \"katex/dist/katex.min.css\";\n\nimport \"highlight.js/styles/github.css\";\n\nconst hljs = require(\"highlight.js/lib/core\");\nconst latex = require(\"highlight.js/lib/languages/latex\");\n\nhljs.registerLanguage(\"latex\", latex);\nhljs.registerLanguage(\"tex\", latex);\n\n/* eslint import/no-webpack-loader-syntax: off */\nace.config.setModuleUrl(\n  \"ace/mode/markdown\",\n  require(\"file-loader?esModule=false!ace-builds/src-min-noconflict/mode-markdown.js\")\n);\nace.config.setModuleUrl(\n  \"ace/theme/github\",\n  require(\"file-loader?esModule=false!ace-builds/src-min-noconflict/theme-github.js\")\n);\n\nconst md = new MarkdownIt({\n  linkify: true,\n})\n  .use(MarkdownItIncrementalDOM, IncrementalDOM)\n  .use(require(\"markdown-it-center-text\"))\n  .use(MarkdownItKaTeX)\n  .use(require(\"markdown-it-highlightjs\"), { inline: true });\n\nconst MIN_WIDTH_FACTOR = 0.15;\nconst MAX_WIDTH_FACTOR = 1 - MIN_WIDTH_FACTOR;\n\nconst fileSystem = new FileSystem();\n\nasync function blobToBase64(blob: Blob): Promise<string> {\n  const reader = new window.FileReader();\n  reader.readAsDataURL(blob);\n  return new Promise((resolve) => {\n    reader.onloadend = () => {\n      resolve(reader.result as string);\n    };\n  });\n}\n\nfunction App() {\n  const [widthFactor, setWidthFactor] = useState<number>(0.5);\n  const [isDragging, setDragging] = useState<boolean>(false);\n\n  const [currentFileName, setCurrentFileName] = useState<string | null>(\n    fileSystem.current\n  );\n  const [content, setContent] = useState<string>(\n    fileSystem.current ? fileSystem.getFile(fileSystem.current) ?? \"\" : \"\"\n  );\n  const [fileList, setFileList] = useState<string[]>(\n    Array.from(fileSystem.index)\n  );\n\n  const [importButtonText, setImportButtonText] = useState(\n    \"Import from Hastebin\"\n  );\n  const [exportButtonText, setExportButtonText] = useState(\n    \"Export to Hastebin\"\n  );\n\n  const [isClipboardSupported, setClipboardSupported] = useState(false);\n\n  useEffect(() => {\n    if (currentFileName) {\n      IncrementalDOM.patch(\n        document.getElementById(\"renderer\")!,\n        (md as any).renderToIncrementalDOM(content)\n      );\n      fileSystem.updateFile(currentFileName, content);\n    }\n  }, [content, currentFileName]);\n\n  // try to get the clipboard permission\n  useEffect(() => {\n    navigator.permissions\n      .query({ name: \"clipboard-read\" as any })\n      .then((result) => {\n        if (result.state === \"prompt\") {\n          (navigator.clipboard as any).read();\n        } else if (result.state === \"granted\") {\n          setClipboardSupported(true);\n        }\n      })\n      .catch(() => console.info(\"Clipboard API is not supported\"));\n  }, [isClipboardSupported]);\n\n  return (\n    <div\n      style={{\n        width: \"100%\",\n        height: \"100%\",\n      }}\n      onMouseMove={(e) => {\n        if (isDragging) {\n          setWidthFactor(\n            Math.min(\n              Math.max(e.pageX / window.innerWidth, MIN_WIDTH_FACTOR),\n              MAX_WIDTH_FACTOR\n            )\n          );\n        }\n      }}\n      onMouseUp={() => setDragging(false)}\n      onMouseLeave={() => setDragging(false)}\n    >\n      <div\n        style={{\n          height: \"3rem\",\n          backgroundColor: \"#2d3748\",\n          display: \"flex\",\n          alignItems: \"center\",\n        }}\n      >\n        <div\n          style={{\n            width: \"20rem\",\n            fontFamily: \"Computer Modern Typewriter\",\n            padding: \"0.25rem 0.5rem\",\n            zIndex: 10,\n          }}\n        >\n          <Creatable\n            isClearable\n            placeholder=\"Select a file\"\n            options={fileList.map((s) => ({ label: s, value: s }))}\n            value={\n              currentFileName\n                ? { label: currentFileName, value: currentFileName }\n                : undefined\n            }\n            styles={{\n              // Fixes the overlapping problem of the component\n              menu: (provided) => ({ ...provided, zIndex: 9999 }),\n            }}\n            onChange={(value, action) => {\n              if (action.action === \"create-option\") {\n                if (!value) return;\n                const filename = (value as { value: string }).value;\n                fileSystem.createFile(filename);\n                setFileList(Array.from(fileSystem.index));\n                setCurrentFileName(filename);\n                fileSystem.setCurrent(filename);\n                setContent(\"\");\n              } else if (action.action === \"select-option\") {\n                if (!value) return;\n                const filename = (value as { value: string }).value;\n                const content = fileSystem.getFile(filename);\n                setCurrentFileName(filename);\n                fileSystem.setCurrent(filename);\n                setContent(content ?? \"\");\n              } else if (action.action === \"clear\") {\n                setCurrentFileName(null);\n                fileSystem.setCurrent(null);\n                setContent(\"\");\n              }\n            }}\n          />\n        </div>\n        <div\n          className=\"hastebin-button\"\n          onClick={async () => {\n            if (importButtonText === \"Importing...\") return;\n            const keyOrUrl = prompt(\n              \"Please enter the url or the key of hastebin document\",\n              \"https://hastebin.com/about\"\n            );\n            if (keyOrUrl === null) {\n              return;\n            }\n            let key = keyOrUrl;\n            if (keyOrUrl.includes(\"hastebin.com/\")) {\n              const matches = keyOrUrl.match(/(?<=hastebin.com\\/)[^.]*/);\n              if (!matches) {\n                return;\n              }\n              key = matches[0];\n            }\n\n            setImportButtonText(\"Importing...\");\n            const url = `https://cors-anywhere.herokuapp.com/https://hastebin.com/raw/${key}`;\n            try {\n              const filename = `hastebin:${key}`;\n              const content = await (await fetch(url)).text();\n              fileSystem.createFile(filename);\n              fileSystem.updateFile(filename, content);\n              setFileList(Array.from(fileSystem.index));\n              setCurrentFileName(filename);\n              fileSystem.setCurrent(filename);\n              setContent(content);\n              setImportButtonText(\"Import from Hastebin\");\n            } catch (e) {\n              console.log(e);\n              setImportButtonText(e.toString());\n              return;\n            }\n          }}\n        >\n          {importButtonText}\n        </div>\n        <div\n          className=\"hastebin-button\"\n          onClick={async () => {\n            if (exportButtonText === \"Exporting...\") return;\n            if (content === \"\") return;\n\n            setExportButtonText(\"Exporting...\");\n            const url =\n              \"https://cors-anywhere.herokuapp.com/https://hastebin.com/documents\";\n            try {\n              const { key }: { key: string } = await (\n                await fetch(url, { method: \"POST\", body: content })\n              ).json();\n              window.open(`https://hastebin.com/${key}.md`);\n              setExportButtonText(\"Export to Hastebin\");\n\n              const filename = `hastebin:${key}`;\n              fileSystem.createFile(filename);\n              fileSystem.updateFile(filename, content);\n              setFileList(Array.from(fileSystem.index));\n              setCurrentFileName(filename);\n              fileSystem.setCurrent(filename);\n              setContent(content);\n            } catch (e) {\n              console.log(e);\n              setExportButtonText(e.toString());\n              return;\n            }\n          }}\n        >\n          {exportButtonText}\n        </div>\n      </div>\n      <div\n        style={{\n          display: \"flex\",\n          width: \"100%\",\n          height: \"calc(100% - 3rem)\",\n        }}\n      >\n        <div\n          style={{\n            boxSizing: \"border-box\",\n            padding: \"1rem 1.5rem 1.5rem\",\n            width: `${widthFactor * 100}%`,\n            height: \"100%\",\n            backgroundColor: \"#eae8ec\",\n          }}\n        >\n          <AceEditor\n            mode=\"latex\"\n            theme=\"github\"\n            onChange={setContent}\n            value={content}\n            width=\"100%\"\n            height=\"100%\"\n            editorProps={{ $blockScrolling: true }}\n            style={{\n              borderRadius: \"0.75rem\",\n              boxShadow:\n                \"0 10px 20px rgba(0,0,0,0.19), 0 6px 6px rgba(0,0,0,0.23)\",\n            }}\n            readOnly={currentFileName === null}\n            onLoad={(editor: any) => {\n              editor.commands.addCommand({\n                name: \"centering\",\n                bindKey: { win: \"Alt-C\", mac: \"Option-C\" },\n                exec: () => {\n                  try {\n                    if (editor.getSelectedText().length === 0) {\n                      const { row } = editor.selection.getRange().end;\n                      editor.session.insert({ row, column: 0 }, \"-> \");\n                      editor.session.insert({ row, column: Infinity }, \" <-\");\n                    } else {\n                      editor.session.replace(\n                        editor.selection.getRange(),\n                        `-> ${editor.getSelectedText()} <-`\n                      );\n                    }\n                  } catch (e) {}\n                },\n              });\n\n              editor.commands.addCommand({\n                name: \"wordWrap\",\n                bindKey: { win: \"Alt-Z\", mac: \"Option-Z\" },\n                exec: () => {\n                  editor.setOption(\"wrap\", editor.getOption(\"wrap\") === \"off\");\n                },\n              });\n\n              navigator.permissions\n                .query({ name: \"clipboard-read\" as any })\n                .then((result) => {\n                  if (result.state === \"prompt\" || result.state === \"granted\") {\n                    editor.commands.addCommand({\n                      name: \"customPaste\",\n                      bindKey: { win: \"Ctrl-V\", mac: \"Command-V\" },\n                      exec: async () => {\n                        const [\n                          data,\n                        ] = await (navigator.clipboard as any).read();\n                        if (data.types[0] === \"text/plain\") {\n                          editor.session.replace(\n                            editor.selection.getRange(),\n                            await (await data.getType(\"text/plain\")).text()\n                          );\n                          const {\n                            row,\n                            column,\n                          } = editor.selection.getRange().end;\n                          editor.clearSelection();\n                          editor.selection.moveCursorTo(row, column);\n                        }\n                        if (data.types[0] === \"image/png\") {\n                          const formData = new FormData();\n                          const base64Image = await blobToBase64(\n                            await data.getType(\"image/png\")\n                          );\n                          formData.append(\"image\", base64Image.slice(22));\n\n                          const response = await fetch(\n                            \"https://api.imgur.com/3/image\",\n                            {\n                              method: \"POST\",\n                              headers: {\n                                Authorization: \"Client-ID 7e06dc2fe0a78bb\",\n                              },\n                              body: formData,\n                            }\n                          );\n                          const {\n                            data: { link },\n                          } = await response.json();\n                          editor.session.replace(\n                            editor.selection.getRange(),\n                            `![](${link})`\n                          );\n                          console.log(editor);\n                          editor.selection.moveCursorBy(0, -link.length - 3);\n                        }\n                      },\n                    });\n                  }\n                })\n                .catch(() => {});\n            }}\n          />\n        </div>\n        <div\n          id=\"renderer\"\n          style={{\n            width: `${(1 - widthFactor) * 100}%`,\n            height: \"100%\",\n            boxSizing: \"border-box\",\n            padding: \"1rem 1.5rem 1.5rem\",\n            fontSize: \"1.05rem\",\n            overflowY: \"auto\",\n          }}\n        >\n          {currentFileName ? null : (\n            <div\n              style={{\n                width: \"100%\",\n                height: \"100%\",\n                display: \"flex\",\n                justifyContent: \"center\",\n                alignItems: \"center\",\n                fontStyle: \"italic\",\n                fontSize: \"1.2rem\",\n              }}\n            >\n              <span>Open a file to edit!</span>\n            </div>\n          )}\n        </div>\n      </div>\n      <div\n        id=\"separator\"\n        style={{\n          boxSizing: \"border-box\",\n          marginLeft: `${widthFactor * 100}vw`,\n        }}\n        onMouseDownCapture={() => setDragging(true)}\n      ></div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\"),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","/* Process inline math */\n/*\nLike markdown-it-simplemath, this is a stripped down, simplified version of:\nhttps://github.com/runarberg/markdown-it-math\n\nIt differs in that it takes (a subset of) LaTeX as input and relies on KaTeX\nfor rendering output.\n*/\n\n/*jslint node: true */\n\"use strict\";\n\nvar katex = require(\"katex\");\n\n// Test if potential opening or closing delimieter\n// Assumes that there is a \"$\" at state.src[pos]\nfunction isValidDelim(state, pos) {\n  var prevChar,\n    nextChar,\n    max = state.posMax,\n    can_open = true,\n    can_close = true;\n\n  prevChar = pos > 0 ? state.src.charCodeAt(pos - 1) : -1;\n  nextChar = pos + 1 <= max ? state.src.charCodeAt(pos + 1) : -1;\n\n  // Check non-whitespace conditions for opening and closing, and\n  // check that closing delimeter isn't followed by a number\n  if (\n    prevChar === 0x20 /* \" \" */ ||\n    prevChar === 0x09 /* \\t */ ||\n    (nextChar >= 0x30 /* \"0\" */ && nextChar <= 0x39) /* \"9\" */\n  ) {\n    can_close = false;\n  }\n  if (nextChar === 0x20 /* \" \" */ || nextChar === 0x09 /* \\t */) {\n    can_open = false;\n  }\n\n  return {\n    can_open: can_open,\n    can_close: can_close,\n  };\n}\n\nfunction math_inline(state, silent) {\n  var start, match, token, res, pos, esc_count;\n\n  if (state.src[state.pos] !== \"$\") {\n    return false;\n  }\n\n  res = isValidDelim(state, state.pos);\n  if (!res.can_open) {\n    if (!silent) {\n      state.pending += \"$\";\n    }\n    state.pos += 1;\n    return true;\n  }\n\n  // First check for and bypass all properly escaped delimieters\n  // This loop will assume that the first leading backtick can not\n  // be the first character in state.src, which is known since\n  // we have found an opening delimieter already.\n  start = state.pos + 1;\n  match = start;\n  while ((match = state.src.indexOf(\"$\", match)) !== -1) {\n    // Found potential $, look for escapes, pos will point to\n    // first non escape when complete\n    pos = match - 1;\n    while (state.src[pos] === \"\\\\\") {\n      pos -= 1;\n    }\n\n    // Even number of escapes, potential closing delimiter found\n    if ((match - pos) % 2 == 1) {\n      break;\n    }\n    match += 1;\n  }\n\n  // No closing delimter found.  Consume $ and continue.\n  if (match === -1) {\n    if (!silent) {\n      state.pending += \"$\";\n    }\n    state.pos = start;\n    return true;\n  }\n\n  // Check if we have empty content, ie: $$.  Do not parse.\n  if (match - start === 0) {\n    if (!silent) {\n      state.pending += \"$$\";\n    }\n    state.pos = start + 1;\n    return true;\n  }\n\n  // Check for valid closing delimiter\n  res = isValidDelim(state, match);\n  if (!res.can_close) {\n    if (!silent) {\n      state.pending += \"$\";\n    }\n    state.pos = start;\n    return true;\n  }\n\n  if (!silent) {\n    token = state.push(\"math_inline\", \"math\", 0);\n    token.markup = \"$\";\n    token.content = state.src.slice(start, match);\n  }\n\n  state.pos = match + 1;\n  return true;\n}\n\nfunction math_block(state, start, end, silent) {\n  var firstLine,\n    lastLine,\n    next,\n    lastPos,\n    found = false,\n    token,\n    pos = state.bMarks[start] + state.tShift[start],\n    max = state.eMarks[start];\n\n  if (pos + 2 > max) {\n    return false;\n  }\n  if (state.src.slice(pos, pos + 2) !== \"$$\") {\n    return false;\n  }\n\n  pos += 2;\n  firstLine = state.src.slice(pos, max);\n\n  if (silent) {\n    return true;\n  }\n  if (firstLine.trim().slice(-2) === \"$$\") {\n    // Single line expression\n    firstLine = firstLine.trim().slice(0, -2);\n    found = true;\n  }\n\n  for (next = start; !found; ) {\n    next++;\n\n    if (next >= end) {\n      break;\n    }\n\n    pos = state.bMarks[next] + state.tShift[next];\n    max = state.eMarks[next];\n\n    if (pos < max && state.tShift[next] < state.blkIndent) {\n      // non-empty line with negative indent should stop the list:\n      break;\n    }\n\n    if (state.src.slice(pos, max).trim().slice(-2) === \"$$\") {\n      lastPos = state.src.slice(0, max).lastIndexOf(\"$$\");\n      lastLine = state.src.slice(pos, lastPos);\n      found = true;\n    }\n  }\n\n  state.line = next + 1;\n\n  token = state.push(\"math_block\", \"math\", 0);\n  token.block = true;\n  token.content =\n    (firstLine && firstLine.trim() ? firstLine + \"\\n\" : \"\") +\n    state.getLines(start + 1, next, state.tShift[start], true) +\n    (lastLine && lastLine.trim() ? lastLine : \"\");\n  token.map = [start, state.line];\n  token.markup = \"$$\";\n  return true;\n}\n\nmodule.exports = function math_plugin(md, options) {\n  // Default options\n\n  options = options || {};\n\n  // set KaTeX as the renderer for markdown-it-simplemath\n  var katexInline = function (latex) {\n    options.displayMode = false;\n    try {\n      return katex.renderToString(latex, options);\n    } catch (error) {\n      if (options.throwOnError) {\n        console.log(error);\n      }\n      return latex;\n    }\n  };\n\n  var inlineRenderer = function (tokens, idx) {\n    return katexInline(tokens[idx].content);\n  };\n\n  var katexBlock = function (latex) {\n    options.displayMode = true;\n    try {\n      return \"<p>\" + katex.renderToString(latex, options) + \"</p>\";\n    } catch (error) {\n      if (options.throwOnError) {\n        console.log(error);\n      }\n      return latex;\n    }\n  };\n\n  var blockRenderer = function (tokens, idx) {\n    return katexBlock(tokens[idx].content) + \"\\n\";\n  };\n\n  md.inline.ruler.after(\"escape\", \"math_inline\", math_inline);\n  md.block.ruler.after(\"blockquote\", \"math_block\", math_block, {\n    alt: [\"paragraph\", \"reference\", \"blockquote\", \"list\"],\n  });\n  md.renderer.rules.math_inline = inlineRenderer;\n  md.renderer.rules.math_block = blockRenderer;\n};\n"],"sourceRoot":""}